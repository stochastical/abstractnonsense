name: Create new blog post

on:
  issues:
    types:
      - labeled

permissions:
    contents: write
    issues: write

jobs:
  create-post:
    # Restrict to my GitHub username to prevent the public from creating new blog posts
    if: github.actor == 'stochastical' && github.event.label.name == 'new-blog-post'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Parse Issue
        id: issue-parser
        uses: issue-ops/parser@v4.1.0
        with:
          body: ${{ github.event.issue.body }}
          issue-form-template: 'new-blog-post.yml'
      
      - name: Process blog post metadata for Hugo
        id: metadata
        env:
          PARSED_ISSUE_JSON: ${{ steps.issue-parser.outputs.json }}
          TODAY: $(TZ=Australia/Melbourne date +%Y-%m-%d)
        run: |
          echo "$PARSED_ISSUE_JSON" > parsed_issue.json

          # Set defaults and transform with jq
          jq --arg today "$TODAY" '
            .date = (.date // $today) |
            .content = (.content // "") |
            .tags = (
              if .tags then
                .tags | split(",") | map(gsub("^\\s+|\\s+$"; ""))
              else 
                []
              end
            )
          ' parsed_issue.json > processed.json

          # Generate filename
          FILENAME=$(jq -r '"\(.date)-\(.title)"' processed.json | \
            tr ' ' '-' | tr '[:upper:]' '[:lower:]' | tr -cd '[:alnum:]-.\n')
          echo "filename=${FILENAME}.md" >> $GITHUB_OUTPUT
          echo "section=$(jq -r '.blog_section[0]' processed.json)" >> $GITHUB_OUTPUT

      - name: Create blog post
        env:
          FILENAME: ${{ steps.metadata.outputs.filename }}
          SECTION: ${{ steps.metadata.outputs.section }}
        run: |
          {
            echo "---"
            jq 'del(.content)' processed.json | yq -P
            echo "---"
            echo
            jq -r '.content' processed.json
          } > "content/${SECTION}/${FILENAME}"

      - name: Commit and push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          FILENAME: ${{ steps.metadata.outputs.filename }}
          SECTION: ${{ steps.metadata.outputs.section }}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          
          git add "content/${SECTION}/${FILENAME}"
          git commit -m "Add new blog post (via Actions): ${FILENAME}"
          git push origin main

          gh issue comment ${{ github.event.issue.number }} \
            --body "Added new blog post to \`content/${SECTION}/${FILENAME}\` at [commit](${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/commit/$(git rev-parse HEAD))" 

      - name: Close issue
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
            gh issue close ${{ github.event.issue.number }} --repo ${{ github.repository }}
